class MinStack {

  public Stack<Integer> stack;  // origin栈

  public Stack<Integer> descStack;  // 单调栈（递减），每个元素在origin栈中到下标为i，那么单调栈中到元素的含义是origin栈中[0, i]区间内的最小值

  /** initialize your data structure here. */
  public MinStack() {
    stack = new Stack<>();
    descStack = new Stack<>();
  }

  public void push(int x) {
    stack.push(x);
    if (descStack.empty() || x <= descStack.peek()) {  // 一定要用 <=
      descStack.push(x);
    }
  }

  public void pop() {
    int top = stack.pop();
    if (top == descStack.peek()) {
      descStack.pop();
    }
  }

  public int top() {
    return stack.peek();
  }

  public int getMin() {
    return descStack.peek();
  }
}
